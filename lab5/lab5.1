//
// LCD_keypad : 3x3 keypad input and display on LCD
//
// EVB : Nu-LB-NUC140
// MCU : NUC140VE3CN  (LQPF-100)
#include <stdio.h>
#include <stdlib.h>
#include "NUC100Series.h"
#include "MCU_init.h"
#include "SYS_init.h"
#include "LCD.h"
#include "Scankey.h"
#include "Seven_Segment.h"

void Buzz(int number)
{
	int i;
	for (i=0; i<number; i++) {
      PB11=0; // PB11 = 0 to turn on Buzzer
	  CLK_SysTickDelay(100000);	 // Delay 
	  PB11=1; // PB11 = 1 to turn off Buzzer	
	  CLK_SysTickDelay(100000);	 // Delay 
	}
}

void Init_GPIO(void)
{
	GPIO_SetMode(PA, BIT12, GPIO_MODE_OUTPUT);
	GPIO_SetMode(PA, BIT13, GPIO_MODE_OUTPUT);
	GPIO_SetMode(PA, BIT14, GPIO_MODE_OUTPUT);
	PA12=1;
	PA13=1;
	PA14=1;
}

void Display_7seg(uint16_t value)
{
  uint8_t digit;
	digit = value / 1000;
	CloseSevenSegment();
	ShowSevenSegment(3,digit);
	CLK_SysTickDelay(3000);
			
	value = value - digit * 1000;
	digit = value / 100;
	CloseSevenSegment();
	ShowSevenSegment(2,digit);
	CLK_SysTickDelay(3000);

	value = value - digit * 100;
	digit = value / 10;
	CloseSevenSegment();
	ShowSevenSegment(1,digit);
	CLK_SysTickDelay(3000);

	value = value - digit * 10;
	digit = value;
	CloseSevenSegment();
	ShowSevenSegment(0,digit);
	CLK_SysTickDelay(3000);
}

int get_password()
{
	int i,ans = 0;
	ans+=1000*(rand()%6+1);
	ans+=100*(rand()%6+1);
	ans+=10*(rand()%6+1);
	ans+=(rand()%6+1);
	return ans;
}

void Marquee()
{
	int i;
	for(i=0;i<2;i++)
	{
		
		PC12 = 0;
		CLK_SysTickLongDelay(100000);
		PC12 = 1; PC13 = 0;
		CLK_SysTickLongDelay(100000);
		PC13 = 1; PC14 = 0;
		CLK_SysTickLongDelay(100000);
		PC14 = 1; PC15 = 0;
		CLK_SysTickLongDelay(100000);
		PC15 = 1; PC14 = 0;
		CLK_SysTickLongDelay(100000);
		PC14 = 1; PC13 = 0;
		CLK_SysTickLongDelay(100000);
		PC13 = 1; PC12 = 0;
		CLK_SysTickLongDelay(100000);
		PC12 = 1; 
		CLK_SysTickLongDelay(100000);
	}
}

void mode(int key,int target)
{
	int n,st1,st2,st3,st4,check,i;
	static int line = 0,charindex = 0;
	static char password[4] = {'0','0','0','0'};
	static char input[4] = {'\0','\0','\0','\0'};
	
	n = target;
	st1 = n/1000;
	n%=1000;
	st2 = n/100;
	n%=100;
	st3 = n/10;
	n%=10;
	st4 = n;
	password[0] = st1+'0';
	password[1] = st2+'0';
	password[2] = st3+'0';
	password[3] = st4+'0';
	
	if(key==8)
	{
		clear_LCD();
		line = 0;
		charindex = 0;
	}
	else if(key==9)
	{
		if(line<=3)
		{
			check = 1;
			if(charindex==0)
			{
				printS(80,line*16,"NULL");
			}
			else
			{
				for(i=0;i<4;i++)
				{
					if(password[i] != input[i])
					{
						check = 0;
						break;
					}
				}
				if(check)
				{
					printS(80,line*16,"PASS");
					Marquee();
				}
				else
				{
					printS(80,line*16,"ERROR");
					Buzz(1);
				}
			}
			charindex = 0;
			line++;
		}
	}
	else if(key>=1 && key<=6)
	{
		if(charindex<4)
		{	
			sprintf(input+charindex,"%d",key);
			charindex++;
			print_Line(line,input);
		}
	}
	CLK_SysTickDelay(3000);
}

int key_release(void)
{
		static int prekey = 0;
		int presentkey = 0,result = 0;
		presentkey = ScanKey();
		CLK_SysTickDelay(1000);
		if(prekey!=0 && presentkey==0)
			result = prekey;
		else
			result = 0;
		prekey = presentkey;
		return result;
}

int main(void)
{
	char Text[16] = "keypad:         ";
	int count = 0,line = 0,key,lastpressed,value=0;
	uint8_t keyin;
	Init_GPIO();
	SYS_Init();
	GPIO_SetMode(PB, BIT11, GPIO_MODE_OUTPUT);
	OpenSevenSegment();
	CloseSevenSegment();
	init_LCD();
	clear_LCD();
	
	OpenKeyPad();	              // initialize 3x3 keypad
	
	 
	while(1)
	{
	  key	= key_release();
		if(key!=0)
		{
			lastpressed = key;
			srand(count++);
			if(key==7)
				value = get_password();
		}
		Display_7seg(value);
		mode(key,value);
		CLK_SysTickDelay(3000);
	}
}
